use:
    -classpath/-cp to specify from which folder is accessible root folder of package ( use absolute path )
    -d specify existing folder where all compiled file structure will be compiled ( can be relative )

   javac -cp path/to/imported path-to-main() -d path-where-put-compiled
   javac -cp /home/vlas/IdeaProjects/webServer/src -d ./bin /home/vlas/IdeaProjects/webServer/src/root/addPack/Demo.java


   java -cp /home/vlas/IdeaProjects/webServer/bin root.addPack.Demo

   mandatory specify key -c with -f close one to one
   -e entry point, specify fqdn for main class
   -C change temporary dir
   . -recursively process all .class at the specified dir
   jar cfe Demo.jar root.addPack.Demo -C ./bin/ .

MAVEN MVN

    maven loads dependencies and build projects via phases as clean, compile, install, package
    local repo ~/.m2 can have settings.xml
    root pom.xml

    <project>
        //constant
        <modelVersion>4.0.0</modelVersion>
        // identifies company, org
        <groupId>com.vlas</groupId>
        // ident project
        <artifactId>webServer</artifactId>
        <version>1</version>
        // can be war, default is jar
        <packaging>jar</packaging>
        <build>
            // output dir for compiled files
            <outputDirectory>compiled</outputDirectory>
            // name of packaged archive
            <finalName>webServer</finalName>
            // folder from which starts fqdn for main class
            <sourceDirectory>src/root</sourceDirectory>
            <plugins>
            // external plugins also mvn plugins
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>3.1.2</version>
                    <configuration>
                        <archive>
                        // set manifest config file to pack .jar as standalone app
                            <manifest>
                                <addClasspath>true</addClasspath>
                                <mainClass>root.addPack.Demo</mainClass>
                            </manifest>
                        </archive>
                    </configuration>
                </plugin>
            </plugins>
        </build>
    </project>